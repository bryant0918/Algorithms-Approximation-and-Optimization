10/22/21 16:34

Problem 1 (5 points):
Score += 5

Problem 2 (5 points):
Score += 5

Problem 3 (10 points):
Score += 10

Problem 4 (10 points):
TypeError: cannot unpack non-iterable NoneType object

Problem 5 (10 points):
TypeError: KNeighborsClassifier() takes no arguments

Problem 6 (5 points):
NotImplementedError: Problem 6 Incomplete

Code Quality (5 points):
Your code printed a lot of lines that it was not supposed to. Please remove all of these print statements.
Score += 0

Total score: 20/50 = 40.0%

-------------------------------------------------------------------------------

10/26/21 09:10

Problem 1 (5 points):
Score += 5

Problem 2 (5 points):
Score += 5

Problem 3 (10 points):
Score += 10

Problem 4 (10 points):
TypeError: cannot unpack non-iterable NoneType object

Problem 5 (10 points):
TypeError: KNeighborsClassifier() takes no arguments

Problem 6 (5 points):
NotImplementedError: Problem 6 Incomplete

Code Quality (5 points):
Code can be improved for KDT.insert()
Score += 1

Total score: 21/50 = 42.0%


Comments:
	Your code outputs several arrays that it should not. Please remove these print statements and add comments to every function to get full points on code quality.

-------------------------------------------------------------------------------

10/28/21 11:14

Problem 1 (5 points):
Score += 5

Problem 2 (5 points):
Score += 5

Problem 3 (10 points):
Score += 10

Problem 4 (10 points):

	_student_nn() failed: incorrect nearest neighbor
	Correct response: [0.313 0.689 0.343 0.16  0.036 0.392 0.838 0.288 0.91  0.474]
	Student response: [0.836 0.81  0.05  0.572 0.133 0.398 0.22  0.444 0.2   0.252]

	_student_nn() failed: incorrect nearest neighbor
	Correct response: [0.132 0.024 0.595 0.046 0.448 0.487 0.492 0.07  0.266 0.431]
	Student response: [0.09  0.372 0.756 0.144 0.399 0.405 0.438 0.037 0.537 0.958]

	_student_nn() failed: incorrect nearest neighbor
	Correct response: [0.124 0.518 0.608 0.606 0.606 0.806 0.419 0.199 0.117 0.683 0.482 0.673
 0.794 0.732 0.099 0.546 0.929 0.778 0.522 0.833 0.265 0.515 0.722 0.235
 0.791 0.302 0.709 0.147 0.185 0.61  0.783 0.332 0.578 0.506 0.252 0.543
 0.242 0.461 0.244 0.498 0.35  0.45  0.53  0.934 0.454 0.501 0.312 0.51
 0.903 0.251 0.927 0.551 0.73  0.71  0.461 0.016 0.433 0.976 0.743 0.488
 0.271 0.211 0.556 0.673 0.599 0.94  0.964 0.348 0.302 0.795 0.771 0.42
 0.045 0.899 0.758 0.619 0.584 0.454 0.572 0.672 0.83  0.607 0.031 0.941
 0.931 0.876 0.72  0.607 0.249 0.268 0.903 0.496 0.349 0.878 0.521 0.128
 0.503 0.282 0.268 0.142]
	Student response: [0.476 0.259 0.767 0.963 0.106 0.634 0.539 0.388 0.561 0.029 0.302 0.752
 0.176 0.218 0.984 0.548 0.87  0.867 0.799 0.495 0.545 0.678 0.553 0.356
 0.968 0.537 0.862 0.413 0.48  0.889 0.272 0.968 0.359 0.657 0.741 0.1
 0.455 0.782 0.236 0.425 0.914 0.657 0.645 0.79  0.727 0.328 0.571 0.613
 0.935 0.528 0.011 0.959 0.437 0.869 0.101 0.588 0.417 0.723 0.136 0.659
 0.561 0.11  0.037 0.288 0.632 0.073 0.596 0.354 0.757 0.432 0.734 0.401
 0.016 0.309 0.131 0.673 0.144 0.289 0.359 0.706 0.812 0.152 0.751 0.514
 0.149 0.08  0.119 0.223 0.01  0.027 0.448 0.974 0.407 0.881 0.191 0.666
 0.123 0.151 0.243 0.665]

	_student_nn() failed: incorrect nearest neighbor
	Correct response: [0.823 0.803 0.796 0.297 0.985 0.499 0.725 0.916 0.473 0.331 0.823 0.755
 0.256 0.646 0.805 0.708 0.138 0.573 0.419 0.533 0.632 0.889 0.865 0.505
 0.452 0.747 0.863 0.043 0.567 0.811 0.158 0.292 0.522 0.991 0.746 0.675
 0.128 0.065 0.178 0.654 0.955 0.492 0.945 0.799 0.326 0.575 0.792 0.437
 0.999 0.629 0.521 0.394 0.846 0.854 0.116 0.705 0.506 0.046 0.187 0.223
 0.423 0.247 0.332 0.516 0.409 0.068 0.469 0.188 0.353 0.232 0.484 0.391
 0.574 0.8   0.568 0.087 0.319 0.619 0.569 0.919 0.144 0.444 0.963 0.936
 0.484 0.962 0.014 0.804 0.487 0.826 0.639 0.604 0.175 0.686 0.122 0.892
 0.052 0.516 0.714 0.323]
	Student response: [0.829 0.834 0.971 0.531 0.529 0.141 0.98  0.912 0.068 0.109 0.698 0.18
 0.651 0.604 0.729 0.445 0.424 0.786 0.841 0.265 0.103 0.747 0.79  0.701
 0.79  0.627 0.214 0.971 0.822 0.189 0.077 0.289 0.295 0.473 0.688 0.25
 0.912 0.336 0.439 0.925 0.372 0.485 0.154 0.541 0.663 0.048 0.207 0.994
 0.173 0.032 0.974 0.99  0.433 0.631 0.582 0.039 0.671 0.788 0.421 0.031
 0.312 0.694 0.557 0.568 0.264 0.224 0.882 0.229 0.43  0.185 0.387 0.04
 0.52  0.851 0.194 0.654 0.265 0.504 0.906 0.806 0.033 0.643 0.168 0.33
 0.128 0.64  0.741 0.524 0.925 0.824 0.023 0.549 0.115 0.967 0.507 0.766
 0.275 0.482 0.654 0.04 ]
Score += 6

Problem 5 (10 points):
Score += 10

Problem 6 (5 points):
Score += 5

Code Quality (5 points):
Score += 5

Total score: 46/50 = 92.0%

Great job!

-------------------------------------------------------------------------------

